package com.APITesting;

import org.testng.annotations.Test;
import org.testng.Assert;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import static io.restassured.RestAssured.baseURI;
import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

import java.util.*;
import org.json.simple.JSONObject;

public class TestGetandPostRequest {

    @Test
    public void GETRequest() {
        baseURI = "http://reqres.in/api";
        given().get("/unknown")
               .then()
               .statusCode(200)
               .body("data[0].id", equalTo(1)) // ID should be an integer
               .log().all();

        given().get("/unknown")
               .then()
               .statusCode(200)
               .body("data[1].name", equalTo("fuchsia rose"))
               .body("data[1].id", equalTo(2)) // ID should be an integer
               .log().all();
    }

    @Test
    public void GETRequest2() {
        baseURI = "http://reqres.in/api";
        given().get("/users?page=2")
               .then()
               .statusCode(200)
               .body("data.first_name", hasItems("Lindsay", "Tobias"))
               .log().all();
    }

    @Test
    public void POSTRequest() {
        Map<String, Object> map = new HashMap<>();
        
        JSONObject request = new JSONObject(map);
        
        request.put("name", "Dhanesh");
        request.put("job", "Developer");
        
        System.out.println(request.toJSONString());
        
        baseURI = "http://reqres.in/api";
        
        Response response = given()
                               .header("Content-Type", "application/json")
                               .contentType(ContentType.JSON)
                               .accept(ContentType.JSON)
                               .body(request.toJSONString())
                               .post("/users");
        
        // Log the entire response
        response.then().log().all();
        
        // Assert the status code
        response.then().statusCode(201);
    }
}